import{a as u}from"./chunk-6JTKFIGZ.js";import{a as p}from"./chunk-6FMLIRIY.js";import{Jb as w,L as l,Ma as c,Na as g,ha as r,ra as d,rb as t}from"./chunk-ZQZS5QUD.js";import{a,b as i,g as f}from"./chunk-P2VZOJAX.js";var b=f(w());var v={title:"Onboarding Process",mdFile:"./index.md",category:u,order:1},s=v;var h=[];var k={},m=k;var x=`<h1 id="onboarding-process" class="ngde">Onboarding Process<a title="Link to heading" class="ng-doc-header-link ngde" href="/onboarding-process/onboarding-process#onboarding-process"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">A smooth and well-structured onboarding process is crucial for helping you, as a new developer, become productive as quickly as possible. Our onboarding process is broken down into more detail:</p><h4 id="setup-documentation" class="ngde"><strong class="ngde">Setup Documentation</strong><a title="Link to heading" class="ng-doc-header-link ngde" href="/onboarding-process/onboarding-process#setup-documentation"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><p class="ngde">Ensuring that you can set up your development environment without major roadblocks is the first critical step. Here's what this includes:</p><ul class="ngde"><li class="ngde"><p class="ngde"><strong class="ngde">Repository Access</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Instructions</strong>: Follow the steps provided to request or gain access to the necessary repositories.</li><li class="ngde"><strong class="ngde">Permissions</strong>: Contact the team lead for access and ensure you're aware of which branches are relevant for your tasks (e.g., <code class="ngde">development</code>, <code class="ngde">main</code>, or feature branches).</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">Cloning Repositories</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Git Workflow</strong>: The team follows specific version control practices. Whether we use Git Flow or trunk-based development, you\u2019ll need to be aware of the process.</li><li class="ngde"><strong class="ngde">Example</strong>: Use this command to clone the main repository:<pre class="ngde hljs"><code class="hljs language-bash code-lines ngde" lang="bash" name="" icon="" highlightedlines="[]"><span class="line ngde">git <span class="hljs-built_in ngde">clone</span> https://github.com/organization/project.git
</span></code></pre></li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">Setting Up Dependencies</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Instructions</strong>: A list of dependencies like Node.js, Docker, etc., will be provided with clear installation steps.</li><li class="ngde"><strong class="ngde">Automation</strong>: Where possible, you'll have scripts available (e.g., <code class="ngde">setup.sh</code>) to automate the installation of dependencies or to spin up Docker containers.</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">Environment Configuration</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Environment Variables</strong>: You will be provided with the necessary environment variables for local development. We will also provide a sample <code class="ngde">.env</code> file (e.g., <code class="ngde">.env.example</code>) to guide you.</li><li class="ngde"><strong class="ngde">Secrets Management</strong>: You\u2019ll learn how we handle sensitive information like API keys and credentials, possibly using tools like GCloud Secrets Manager or Vault.</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">Running the Application</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Instructions</strong>: A step-by-step guide will show you how to run the application locally, whether through Docker, <code class="ngde">npm run dev</code>, or other commands.</li><li class="ngde"><strong class="ngde">Test Data</strong>: Guidance will be provided on how to set up or access test data, seed the database if needed, and identify which services or endpoints need to be active for the app to function locally.</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">Running Tests</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Unit Tests</strong>: You'll receive instructions on running unit tests (e.g., <code class="ngde">npm run test</code>) and how to check coverage or logs.</li><li class="ngde"><strong class="ngde">Integration Tests</strong>: There will be documentation on how to set up and run integration tests.</li><li class="ngde"><strong class="ngde">Debugging Tools</strong>: We\u2019ll provide tips on debugging with tools like Chrome DevTools, VSCode, or other relevant platforms.</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">For specific guidance check each Solution Onboarding Process Document</strong>:</p><ul class="ngde"><li class="ngde"><a href="/onboarding-process/frontend-onboarding" class="ngde">Frontend</a></li><li class="ngde"><a href="/onboarding-process/backend-onboarding" class="ngde">Backend</a></li><li class="ngde"><a href="/onboarding-process/extension-onboarding" class="ngde">Extension</a></li><li class="ngde"><a href="/onboarding-process/qe-onboarding" class="ngde">QE</a></li><li class="ngde"><a href="/onboarding-process/sre-onboarding" class="ngde">SRE</a></li></ul></li></ul><h4 id="mentorshipbuddy-system" class="ngde"><strong class="ngde">Mentorship/Buddy System</strong><a title="Link to heading" class="ng-doc-header-link ngde" href="/onboarding-process/onboarding-process#mentorshipbuddy-system"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><p class="ngde">The mentorship or buddy system will help you quickly integrate with the team culture and our technical processes.</p><ul class="ngde"><li class="ngde"><p class="ngde"><strong class="ngde">Mentor Assignment</strong>:</p><ul class="ngde"><li class="ngde">You will be paired with a senior or experienced engineer. This person will help answer your questions, review your code, and ensure you follow our best practices.</li><li class="ngde">Your buddy will also introduce you to team rituals like stand-ups, retrospectives, key tools (AzureDevops, Google Workspace), and our engineering workflows.</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">First Month Engagement</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">1:1 Meetings</strong>: We recommend weekly 1:1 meetings with your mentor to provide feedback, resolve blockers, and track your progress.</li><li class="ngde"><strong class="ngde">Pair Programming</strong>: You'll have some pair programming sessions to help you get familiar with the codebase, coding standards, and contribute to smaller tasks.</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">Knowledge Transfer</strong>:</p><ul class="ngde"><li class="ngde">Your buddy will provide you with guidance on the project's architecture and technical decisions.</li><li class="ngde">You\u2019ll be introduced to best practices, coding standards, and where to find key documentation and repositories.</li></ul></li></ul><h4 id="90-day-plan" class="ngde"><strong class="ngde">90-Day Plan</strong><a title="Link to heading" class="ng-doc-header-link ngde" href="/onboarding-process/onboarding-process#90-day-plan"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><p class="ngde">The 90-day plan is designed to help you integrate smoothly into the team with clear goals and expectations. It is structured into three phases: learning, contributing, and taking ownership.</p><ul class="ngde"><li class="ngde"><p class="ngde"><strong class="ngde">First 30 Days (Learning &#x26; Setup)</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Goals</strong>: By the end of your first month, you should be familiar with the company\u2019s tools, codebase, and workflows. You should also feel confident in setting up and running the local environment, navigating the repositories, and understanding the broader architecture.</li><li class="ngde"><strong class="ngde">Tasks</strong>: You\u2019ll start with simple bug fixes, documentation updates, or small feature additions to get comfortable with our processes.</li><li class="ngde"><strong class="ngde">Training</strong>: Internal training sessions or relevant resources (like coding standards and system architecture overview) will be made available to help you understand our environment.</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">Next 30 Days (Contributing)</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Goals</strong>: By the end of your second month, you should be contributing meaningfully to the codebase. You'll be expected to work on more complex work items and take part in code reviews.</li><li class="ngde"><strong class="ngde">Tasks</strong>: In this phase, you'll work on medium-sized features and contribute to sprint planning and retrospectives.</li><li class="ngde"><strong class="ngde">Team Integration</strong>: You\u2019re encouraged to start leading stand-ups or retrospectives to build confidence and improve communication within the team.</li></ul></li><li class="ngde"><p class="ngde"><strong class="ngde">Final 30 Days (Ownership &#x26; Improvement)</strong>:</p><ul class="ngde"><li class="ngde"><strong class="ngde">Goals</strong>: By the end of the third month, you should be taking ownership of small features or projects. At this stage, you'll demonstrate your ability to take a work item from planning to execution and delivery.</li><li class="ngde"><strong class="ngde">Tasks</strong>: You'll work on cross-team collaborations, implement significant parts of the application, or handle complex bugs that require in-depth problem-solving.</li><li class="ngde"><strong class="ngde">Feedback &#x26; Evaluation</strong>: At the end of 90 days, you\u2019ll receive formal feedback from your mentor and team lead to review your progress and areas for improvement.</li></ul></li></ul><p class="ngde">By following this onboarding process, you'll gradually become comfortable with the codebase, team dynamics, and company standards, allowing you to contribute efficiently and confidently.</p>`,D=(()=>{let e=class e extends t{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=x,this.page=s,this.demoAssets=m}};e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=l({type:e,selectors:[["ng-doc-page-onboarding-process-onboarding-process"]],standalone:!0,features:[c([{provide:t,useExisting:e},h,s.providers??[]]),r,g],decls:1,vars:0,template:function(o,T){o&1&&d(0,"ng-doc-page")},dependencies:[p],encapsulation:2,changeDetection:0});let n=e;return n})(),P=[i(a({},(0,b.isRoute)(s.route)?s.route:{}),{path:"",component:D,title:"Onboarding Process"})],N=P;export{D as DynamicComponent,N as default};
