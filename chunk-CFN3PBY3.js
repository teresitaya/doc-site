import{a as u}from"./chunk-6FMLIRIY.js";import{Jb as v,L as c,Ma as d,Na as g,ha as a,ra as r,rb as t}from"./chunk-ZQZS5QUD.js";import{a as i,b as l,g as k}from"./chunk-P2VZOJAX.js";var m=k(v());var C={title:"CI-CD Workflow"},p=C;var y={title:"CI-CD Workflow",mdFile:"./index.md",category:p},s=y;var h=[];var D={},f=D;var A='<h1 id="cicd-workflow" class="ngde">CI/CD Workflow<a title="Link to heading" class="ng-doc-header-link ngde" href="/ci-cd-workflow/ci-cd-workflow#cicd-workflow"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">This document provides a detailed overview of the CI/CD Workflow defined for RiskPhysics development process. The primary objectives are to simplify the deployment process, guarantee the quality of the code, and uphold a systematic methodology for the roll-out of new features and updates. This guide encompasses the journey from code creation to production deployment, emphasizing crucial steps, checkpoints, and responsibilities.</p><h3 id="cicd-workflow-overview" class="ngde">CI/CD Workflow Overview<a title="Link to heading" class="ng-doc-header-link ngde" href="/ci-cd-workflow/ci-cd-workflow#cicd-workflow-overview"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h3><p class="ngde">The CI/CD workflow consists of the following stages:</p><ol class="ngde"><li class="ngde"><strong class="ngde">Analysis</strong></li><li class="ngde"><strong class="ngde">Code Development</strong></li><li class="ngde"><strong class="ngde">Development Branch</strong></li><li class="ngde"><strong class="ngde">QE/Beta Branch</strong></li><li class="ngde"><strong class="ngde">Production</strong></li></ol><p class="ngde"><img src="assets/img/CI-CD-Workflow.png" alt="CI/CD Workflow" class="ngde"></p><h4 id="1-analysis" class="ngde">1. Analysis<a title="Link to heading" class="ng-doc-header-link ngde" href="/ci-cd-workflow/ci-cd-workflow#1-analysis"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><ul class="ngde"><li class="ngde"><strong class="ngde">Activities</strong>: Initial review, research, and analysis of requirements.</li><li class="ngde"><strong class="ngde">Outcome</strong>: A clear understanding of the requirements and backlogs to be implemented.</li></ul><h4 id="2-code-development" class="ngde">2. Code Development<a title="Link to heading" class="ng-doc-header-link ngde" href="/ci-cd-workflow/ci-cd-workflow#2-code-development"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><ul class="ngde"><li class="ngde"><strong class="ngde">Activities</strong>: Write and update code based, unit test and documentation on the requirements.</li><li class="ngde"><strong class="ngde">Tools</strong>: Integrated Development Environment (IDE) with necessary plugins or extensions based on the project requirements.</li><li class="ngde"><strong class="ngde">Outcome</strong>: Approved PR to Development Environment.</li></ul><h4 id="3-development-branch" class="ngde">3. Development Branch<a title="Link to heading" class="ng-doc-header-link ngde" href="/ci-cd-workflow/ci-cd-workflow#3-development-branch"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><ul class="ngde"><li class="ngde"><strong class="ngde">Activities</strong>:<ul class="ngde"><li class="ngde"><strong class="ngde">Build</strong>: Compile the code.</li><li class="ngde"><strong class="ngde">Security Scan</strong>: Perform a security scan of the code.</li><li class="ngde"><strong class="ngde">Unit Test</strong>: Execute unit tests to verify the functionality.</li><li class="ngde"><strong class="ngde">Code Analysis</strong>: Analyze the code for quality and adherence to standards.</li><li class="ngde"><strong class="ngde">Review</strong> Review the build results, security scan reports, unit test results, and code analysis.</li></ul></li><li class="ngde"><strong class="ngde">Tools</strong>: Devops.</li><li class="ngde"><strong class="ngde">Outcome</strong>: Approved PR to Beta Environment.</li><li class="ngde"><strong class="ngde">Gate</strong>: PM approval required before promoting the code to QE/Beta.</li></ul><h4 id="4-beta-branch" class="ngde">4. Beta Branch<a title="Link to heading" class="ng-doc-header-link ngde" href="/ci-cd-workflow/ci-cd-workflow#4-beta-branch"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><ul class="ngde"><li class="ngde"><strong class="ngde">Activities</strong>:<ul class="ngde"><li class="ngde"><strong class="ngde">Development Branch Activities</strong>: Build/Security Scan/Unit Test/Code Analysis/Review.</li><li class="ngde"><strong class="ngde">Regression Testing</strong>: Execute a comprehensive suite of regression tests.</li><li class="ngde"><strong class="ngde">User Acceptance Testing (UAT)</strong>: Conduct UAT to ensure the changes meet the user requirements.</li><li class="ngde"><strong class="ngde">Develop/Update Automation Test</strong>: This step involves creating or modifying automated tests to ensure the functionality of new or updated features in the application.</li></ul></li><li class="ngde"><strong class="ngde">Tools</strong>: Selenium, Appium, JUnit/TestNG, other test automation frameworks.</li><li class="ngde"><strong class="ngde">Outcome</strong>: Confirm that the code is stable and meets quality standards.</li><li class="ngde"><strong class="ngde">Outcome</strong>: Approved PR to Production Environment.</li><li class="ngde"><strong class="ngde">Outcome</strong>: Create Internal Release Notes.</li><li class="ngde"><strong class="ngde">Gate</strong>: Approval required from QE and stakeholders before promoting the code to production.</li></ul><h4 id="5-production" class="ngde">5. Production<a title="Link to heading" class="ng-doc-header-link ngde" href="/ci-cd-workflow/ci-cd-workflow#5-production"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><ul class="ngde"><li class="ngde"><strong class="ngde">Activities</strong>:<ul class="ngde"><li class="ngde"><strong class="ngde">Release Validation Test</strong>: Manual/Automated Test executed to ensure Release and previous features stability.</li></ul></li><li class="ngde"><strong class="ngde">Outcome</strong>: The code is deployed to the production environment, making the new features or updates live.</li><li class="ngde"><strong class="ngde">Outcome</strong>: Public Release Notes is wrote.</li></ul><h4 id="conclusion" class="ngde">Conclusion<a title="Link to heading" class="ng-doc-header-link ngde" href="/ci-cd-workflow/ci-cd-workflow#conclusion"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h4><p class="ngde">Adhering to this CI/CD workflow ensures a consistent, high-quality approach to software development and deployment at RiskPhysics. By following the detailed steps and utilizing the specified tools, we can achieve a reliable and efficient CI/CD process, leading to better collaboration, minimized errors, and faster recovery from issues.</p>',P=(()=>{let e=class e extends t{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=A,this.page=s,this.demoAssets=f}};e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=c({type:e,selectors:[["ng-doc-page-ci-cd-workflow-ci-cd-workflow"]],standalone:!0,features:[d([{provide:t,useExisting:e},h,s.providers??[]]),a,g],decls:1,vars:0,template:function(o,T){o&1&&r(0,"ng-doc-page")},dependencies:[u],encapsulation:2,changeDetection:0});let n=e;return n})(),R=[l(i({},(0,m.isRoute)(s.route)?s.route:{}),{path:"",component:P,title:"CI-CD Workflow"})],S=R;export{P as DynamicComponent,S as default};
